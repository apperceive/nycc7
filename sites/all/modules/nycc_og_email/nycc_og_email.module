<?php
//TODO: Fix tables in nycc_email_get_group_by_email
function nycc_og_email_menu() {
  $items = array();

    //DO WE NEED A SETTINGS PAGE?
    //YES: need to specify signing domain and domain_suffix
    $items['admin/settings/nycc_og_email'] = array(
      'title' => 'NYCC Organic Groups Email Settings',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('nycc_og_email_admin'),
      'access arguments' => array('administer nycc_og_email'),
      'description' => 'configure organic groups email integration',
      'file' => 'nycc_og_email.admin.inc',
      'type' => MENU_NORMAL_ITEM,
    );

    $items['nycc/group_email'] = array(
      'title' => t('NYCC Group Email'),
      'description' => t('Group email'),
        'type' => MENU_CALLBACK,
        'page callback' => 'nycc_og_email_group_email_callback',
        'access callback' => TRUE,
    );      
  return $items;
}


function nycc_og_email_permission() {
  return array(
    'administer nycc og email' => array(
      'title' => t('administer nycc og email'),
      'description' => t('administer nycc og email'),
        ), 
    );
}
function nycc_og_email_group_email_callback() {
  if (variable_get('nycc_og_email_debug_to_log', '') == 1)
    $email_debug = TRUE;
  else
    $email_debug = FALSE;
  
//  if ($email_debug ) watchdog('nycc_email', 'processing inbound group email callback', array(), WATCHDOG_NOTICE) ;

  if (nycc_mandrill_isValid_signature('nycc/group_email', $_POST)) {
    //iterate through the messages
      foreach (json_decode($_POST['mandrill_events']) as $event) {

        $args = nycc_mandrill_get_msg_details($event);
        if ($email_debug) watchdog("nycc_og_email", '<pre>' . print_r( $event, TRUE) . '</pre>'); 
        
        if ($args['to_mail'] != $args['from_email']) {
          $user = user_load_by_mail($args['from_email']);

          if (!empty($user)) {
          if ($email_debug ) watchdog('nycc_og_email', 'messages recieved from <a href="/user/@username">@username</a>',
                                      array('@username' => $user->name), WATCHDOG_NOTICE) ;
      

          $gid = nycc_email_get_group_by_email($args['to_mail']);
          if (isset($gid)) {
            //watchdog("nycc_email", '<pre>' . print_r( $args, TRUE) . '</pre>'); 
            if ($email_debug ) watchdog('nycc_og_email', 'message sent to group: @grp_email',
                                        array('@grp_email' => $args['to_mail']), WATCHDOG_NOTICE) ;
            
            if (nycc_email_is_member_of_group($gid, $user->uid)) {
              
              if ($email_debug ) watchdog('nycc_og_email', '<pre><a href="/user/@username">@username</a> is member or captain of group <a href="/node/@grp_id">@grp_id</a>. Processing email', 
                            array('@username' => $user->name, '@grp_id' => $gid), WATCHDOG_NOTICE) ;
              
              $send_to = nycc_email_get_group_member_emails($gid, $args['to_cc_list']);
              $send_to[] = array(
                'email' => $args['to_mail'],
                'name' => $args['to_mail'],
                'type' => 'to'
              );
              nycc_mandrill_send_email(
                            $to = $send_to, 
                            $from_addr = $args['to_mail'], 
                            $from_name = $args['from_name'] . ' (via ' . variable_get('nycc_og_email_signing_domain', '') . ')',
                            $reply_to = $args['from_email'],
                            $subject = $args['subject'], 
                            $body = $args['html'], 
                            $attachments = $args['attachments'],
                            $tracking_domain = variable_get('nycc_og_email_tracking_domain', ''),
                            $signing_domain = variable_get('nycc_og_email_signing_domain', '')
              );
              
            }
            else {
              if ($email_debug ) watchdog('nycc_og_email', 'Dicarding message. <a href="/user/@username">@username</a> is not member of group with address: @grp_email.', 
                          array('@grp_email' => $args['to_mail'], '@username' => $user->name), WATCHDOG_WARNING) ;
              nycc_mandrill_send_msg($args['from_email'], 
                variable_get('smtp_from', ''), 
                "Unable to process your Group Email sent to: " . $args['to_mail'] ,
                "Hello, We are unable to process your request to email this group because you are not an active member. If you feel you're receiving this message in error, please contact the group captain."
              );              
            }// end if sender is member
          }
          else {
            if ($email_debug ) watchdog('nycc_email', 'Dicarding message. Could not find group with email address: @grp_email', 
                          array('@grp_email' => $args['to_mail']), WATCHDOG_WARNING) ;
                          
              nycc_mandrill_send_msg($args['from_email'], 
                variable_get('smtp_from', ''), 
                "Unable to process your Group Email sent to: " . $args['to_mail'] ,
                "Hello, We are unable to process your request to email this group because we could not find a group with that email address. If you feel you're receiving this message in error, please contact the group captain."
              );                
          } // end if group is found
          }
          else {
            if ($email_debug ) watchdog('nycc_email', 'Dicarding message. Could not find user with email address: @user_email.' , 
                        array('@user_email' => $args['from_email']), WATCHDOG_WARNING) ;
                        
              nycc_mandrill_send_msg($args['from_email'], 
                variable_get('smtp_from', ''), 
                "Unable to process your Group Email sent to: " . $args['to_mail'] ,
                "Hello, We are unable to process your request to email this group because you are not an active NYCC member. If you feel you're receiving this message in error, please contact the group captain."
              );                
          }//end if could not load user
        }
        else { 
          if ($email_debug ) watchdog('nycc_og_email', 'Dicarding message. sender is same as recipient: @user_email to @grp_email.', 
                      array('@user_email' => $args['from_email'], '@grp_email' => $args['to_mail']), WATCHDOG_NOTICE) ;

        }//end if isn't loopback
      } // end for each
    } // end if signature is valid
}

function nycc_og_email_form_alter(&$form, &$form_state, $form_id)  {
  //adds validation to group node form
  if ($form_id == 'group_node_form') {
    $form['#validate'][] = 'nycc_og_email_email_check_validate';
  }
}
 

function nycc_og_email_email_check_validate(&$form, &$form_state)  {
  //Validation logic for group email address
  //Confirms that the domain portion of the email address matches the specified domain suffix
  //Also checks email address to ensure it's structurally valid
  if (strlen(trim($form_state['values']['field_group_email_alias'][0]['value'])) != 0) {

    $mail = explode('@', $form_state['values']['field_group_email_alias'][0]['value']);
    if ( strtolower( trim($mail[1]) != strtolower(trim(variable_get('nycc_og_email_group_domain_suffix', ''))))) {
      form_set_error('field_group_email_alias', 'Email addresses must end in ' . variable_get('nycc_og_email_group_domain_suffix' , '') 
                  . '. Please visit <a href="' . url('/admin/settings/nycc_og_email', array('absolute' => TRUE)) 
                  . '" target="_blank">Settings Page</a> to confirm your domain settings.');
                  
    }   
    if ( ! valid_email_address( $form_state['values']['field_group_email_alias'][0]['value'])) {
      form_set_error('field_group_email_alias', $form_state['values']['field_group_email_alias'][0]['value'] 
      . " is not valid. Please enter a valid e-mail address.");
    }
  } 
}






function nycc_email_get_group_by_email($grp_email = NULL) {
  //returns the group ID of a selected group if the email_alias matches the passed email address
  if ( isset( $grp_email)) {
    $sql = "select n.nid as gid from {content_type_group} g join {node} n on n.nid=g.nid and n.vid=g.vid WHERE g.field_group_email_alias_value='@s'";
      $r = db_fetch_object(db_query($sql, trim($grp_email)));
      watchdog("nycc_of_email", 'Groups: ' . $sql); 
    if ( is_numeric( $r->gid)) {
        if ($email_debug ) watchdog('nycc_og_email', 'nycc_email_get_Group_by_email found group <a href="/node/@grp_id">@grp_id</a> with email address of @grp_email.' , 
                  array('@grp_id' => $r->gid, '@grp_email' => $grp_email), WATCHDOG_NOTICE) ;
        return $r->gid;
      }
      else {
        watchdog('nycc_og_email', 'nycc_og_email_get_group_by_email could not find group with email address of: @grp_email.' , 
              array('@grp_email' => $grp_email), WATCHDOG_NOTICE) ;
        return NULL;
      }
    }
    else {
      return NULL;
  }
}

function nycc_og_email_is_member_of_group($gid, $uid) {
  //checks to see if user is member of specified group
    $sql = "select uid from {og_uid} where nid=@d and uid=@d and is_active=1";

    $r = db_fetch_object(db_query($sql, $gid, $uid));
  if (is_numeric($r->uid) ) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

function nycc_og_email_get_group_member_emails($gid=NULL, $recipients = array()) {
  if (isset($gid)) {
    $emails = array();
    $sql = <<<EOS
select u.mail, cp.field_first_name_value, cp.field_last_name_value 
from og_uid o 
join users u on o.uid=u.uid 
join node n on n.uid=u.uid
join content_type_profile cp on n.nid=cp.nid and n.vid=cp.vid
where o.is_active=1 and o.nid=@d
EOS;
    $q = db_query($sql, $gid);

//    watchdog('nycc_email', 'nycc_email_get_group_member_emails sql  returned ' . db_affected_rows() . ' members of group with id ' . $gid, array(), WATCHDOG_NOTICE) ;
    while ($records = db_fetch_array($q)) {
      if (!in_array(strtolower($records['mail']), $recipients)) {
        $emails[] = array(
          'email' => $records['mail'],
          'name' => $records['field_first_name_value'] . ' ' . $records['field_last_name_value'],
          'type' => 'bcc'
        );
            }
            else {
              //watchdog('nycc_email', 'nycc_email_get_group_member_emails - skipping ' . $records['mail'] . ' because it was in the recipient list', array(), WATCHDOG_NOTICE) ;
            }
    }
      return $emails;
  }
}






