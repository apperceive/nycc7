<?php
//TODO: Fix tables in nycc_email_get_group_by_email
function nycc_og_email_menu() {
  $items = array();
  $items['admin/config/nycc/nycc_og_email'] = array(
      'title' => 'NYCC Organic Groups Email Settings',
      'description' => 'configure organic groups email integration',
      'page callback' => 'drupal_get_form',
      'file' => 'nycc_og_email.admin.inc',
      'access arguments' => array('administer nycc_og_email'),
      'type' => MENU_NORMAL_ITEM,
      'access callback' => TRUE,
      'page arguments' => array('nycc_og_email_admin'),
    );

    $items['nycc_og_email/inbound'] = array(
      'title' => t('NYCC Group Email'),
      'description' => t('Group email'),
        'type' => MENU_CALLBACK,
        'page callback' => 'nycc_og_email_group_email_callback',
        'access callback' => TRUE,
    );      
  return $items;
}


function nycc_og_email_permission() {
  return array(
    'administer nycc og email' => array(
      'title' => t('administer nycc og email'),
      'description' => t('administer nycc og email'),
        ), 
    );
}
function nycc_og_email_group_email_callback() {
  if (variable_get('nycc_og_email_debug_to_log', '1') == 1)
    $email_debug = TRUE;
  else
    $email_debug = FALSE;
  
  if ($email_debug ) watchdog('nycc_og_email', 'processing inbound group email callback', array(), WATCHDOG_NOTICE) ;
  
  //watchdog('nycc_og_email', '<pre>@print_r</pre>', array('@print_r'=> print_r( $_POST, TRUE)));

  if (! nycc_mandrill_signature_is_valid('nycc_og_email/inbound', $_POST)) {
    if ($email_debug ) watchdog('nycc_og_email', 'Invalid signature detected. Message will be discarded.', array(), WATCHDOG_NOTICE) ;
    return;
  }
  
  if ($email_debug ) watchdog('nycc_og_email', 'iterating through mandrill events', array(), WATCHDOG_NOTICE) ;
  //iterate through the messages
  foreach (json_decode($_POST['mandrill_events']) as $event) {
    if ($email_debug) watchdog("nycc_og_email", '<pre>' . print_r( $event, TRUE) . '</pre>'); 
    $args = nycc_mandrill_get_msg_details($event);
    
    if ( ($args['to_mail'] == $args['from_email'])) {
      //prevent loopbacks
      if ($email_debug ) watchdog('nycc_og_email', 'Dicarding message. sender is same as recipient: @user_email to @grp_email.', 
                    array('@user_email' => $args['from_email'], '@grp_email' => $args['to_mail']), WATCHDOG_NOTICE) ;
      return;
    }
    if ($email_debug ) watchdog('nycc_og_email', 'No loopback detected.', array(), WATCHDOG_NOTICE) ;
    $user = user_load_by_mail($args['from_email']);  
    if(empty($user)) {
      if ($email_debug ) watchdog('nycc_email', 'Dicarding message. Could not find user with email address: @user_email.' , 
                      array('@user_email' => $args['from_email']), WATCHDOG_WARNING) ;
                      
      nycc_mandrill_send_msg($args['from_email'], 
              variable_get('smtp_from', ''), 
              "Unable to process your Group Email sent to: " . $args['to_mail'] ,
              "Hello, We are unable to process your request to email this group because you are not an active NYCC member. If you feel you're receiving this message in error, please contact the group captain.");                      
      return;
    }
    
    if ($email_debug ) watchdog('nycc_og_email', 'messages recieved from <a href="/user/@username">@username</a>',
                                    array('@username' => $user->name), WATCHDOG_NOTICE) ;
    
    $gid = nycc_og_email_get_group_node_by_email($args['to_mail']);
    if (!isset($gid)) {
      if ($email_debug ) watchdog('nycc_email', 'Dicarding message. Could not find group with email address: @grp_email', 
                        array('@grp_email' => $args['to_mail']), WATCHDOG_WARNING) ;
                        
      nycc_mandrill_send_msg($args['from_email'], 
              variable_get('smtp_from', ''), 
              "Unable to process your Group Email sent to: " . $args['to_mail'] ,
              "Hello, We are unable to process your request to email this group because we could not find a group with that email address. If you feel you're receiving this message in error, please contact the group captain.");                

      return;
    }
    
    //watchdog("nycc_email", '<pre>' . print_r( $args, TRUE) . '</pre>'); 
    if ($email_debug ) watchdog('nycc_og_email', 'message sent to group: @grp_email',
                                      array('@grp_email' => $args['to_mail']), WATCHDOG_NOTICE) ;
          
    if (( ! nycc_og_allows_external_email($gid))
        && (! og_is_member('og_membership_type_default', $gid, 'user', $user))) {
      if ($email_debug ) watchdog('nycc_og_email', 'Dicarding message. <a href="/user/@username">@username</a> is not member of group with address: @grp_email.', 
                  array('@grp_email' => $args['to_mail'], '@username' => $user->name), WATCHDOG_WARNING) ;
      nycc_mandrill_send_msg($args['from_email'], 
        variable_get('smtp_from', ''), 
        "Unable to process your Group Email sent to: " . $args['to_mail'] ,
        "Hello, We are unable to process your request to email this group because you are not an active member. If you feel you're receiving this message in error, please contact the group captain."
      );             
    }
    
    if ($email_debug ) watchdog('nycc_og_email',
                                  '<pre><a href="/user/@username">@username</a> is member or captain of group <a href="/node/@grp_id">@grp_id</a>. Processing email', 
                    array('@username' => $user->name, '@grp_id' => $gid), WATCHDOG_NOTICE) ;
      
    $send_to = nycc_og_email_get_group_member_emails($gid, $args['to_cc_list']);
    $send_to[] = array(
        'email' => $args['to_mail'],
        'name' => $args['to_mail'],
        'type' => 'to'
      );
    nycc_mandrill_send_email(
                    $to = $send_to, 
                    $from_addr = $args['to_mail'], 
                    $from_name = $args['from_name'] . ' (via ' . variable_get('nycc_og_email_signing_domain', '') . ')',
                    $reply_to = $args['from_email'],
                    $subject = $args['subject'], 
                    $body = $args['html'], 
                    $attachments = $args['attachments'],
                    $tracking_domain = variable_get('nycc_og_email_tracking_domain', ''),
                    $signing_domain = variable_get('nycc_og_email_signing_domain', '')
                    );
  } // end for each
}

function nycc_og_email_form_alter(&$form, &$form_state, $form_id)  {
  //adds validation to group node form
  if ($form_id == 'group_node_form') {
    $form['#validate'][] = 'nycc_og_email_email_check_validate';
  }
}


function nycc_og_email_email_check_validate(&$form, &$form_state)  {
  //Validation logic for group email address
  //Confirms that the domain portion of the email address matches the specified domain suffix
  //Also checks email address to ensure it's structurally valid
  if (strlen(trim($form_state['values']['field_group_email']['und'][0]['value'])) != 0) {
                             

    $mail = explode('@', $form_state['values']['field_group_email']['und'][0]['value']);
    if ( strtolower( trim($mail[1]) != strtolower(trim(variable_get('nycc_og_email_group_domain_suffix', ''))))) {
      form_set_error('field_group_email', 'Email addresses must end in ' . variable_get('nycc_og_email_group_domain_suffix' , '') 
                  . '. Please visit <a href="' . url('/admin/settings/nycc_og_email', array('absolute' => TRUE)) 
                  . '" target="_blank">Settings Page</a> to confirm your domain settings.');
                  
    }   
    if ( ! valid_email_address( $form_state['values']['field_group_email']['und'][0]['value'])) {
      form_set_error('field_group_email_alias', $form_state['values']['field_group_email']['und'][0]['value']
      . " is not valid. Please enter a valid e-mail address.");
    }
  } 
}

function nycc_og_allows_external_email($group) {
  if (is_numeric($group)) {
    $group = node_load($group);
  }
  
  if (!isset($group)) {
    return false;
  }
  return property_exists($group,'field_group_accept_ext_email') &&  nycc_field_get_text_value($group->field_group_accept_ext_email);
}


function nycc_og_email_get_group_node_by_email($grp_email) {
  //returns the nid of a selected group if the email_alias matches the passed email address
  if ( !isset( $grp_email)) {
    return 0;
  }
  
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', 'group');
  $query->fieldCondition('field_group_email', 'value', $grp_email,'=');
  $result = $query->execute();
  
  dpm($result);
  
  if (empty($result) || count($result) == 0) {
    watchdog('nycc_og_email',
             'nycc_email_get_group_node_by_email could not find group with email address of: @grp_email.' , 
              array('@grp_email' => $grp_email), WATCHDOG_NOTICE) ;    
    return 0;
  }
  
  if(count($result)>1) {
    watchdog('nycc_og_email',
             'nycc_email_get_group_node_by_email found multiple groups  with email address of: @grp_email.' , 
              array('@grp_email' => $grp_email), WATCHDOG_ERROR) ;    
    return 0;
  }
  
  if( count($result) == 1)
  {
    foreach($result as $g) {
      return key($g);
    }
  }

}
//og_is_member

//
//function nycc_og_email_is_member_of_group($gid, $uid) {
//  //checks to see if user is member of specified group
//    $sql = "select uid from {og_uid} where nid=@d and uid=@d and is_active=1";
//
//    $r = db_fetch_object(db_query($sql, $gid, $uid));
//  if (is_numeric($r->uid) ) {
//    return TRUE;
//  }
//  else {
//    return FALSE;
//  }
//}

function nycc_og_email_get_group_member_emails($gid, $recipients = array()) {
  if (! is_numeric($gid)){
    return $recipients;
  }
  $emails = array();
  
$sql = <<<EOS
select u.mail as mail, rn.realname as realname
from og_membership o
join users u on o.etid=u.uid
join realname rn on rn.uid=u.uid
where o.state=1 
and o.gid=:gid
EOS;
 
  $q = db_query($sql,  array(':gid' => $gid));
  //    watchdog('nycc_email', 'nycc_email_get_group_member_emails sql  returned ' . db_affected_rows() . ' members of group with id ' . $gid, array(), WATCHDOG_NOTICE) ;
  foreach($q as $records) {
    if (!in_array(strtolower($records->mail), $recipients)) {
      $emails[] = array(
                        'email' => $records->mail,
                        'name' => $records->realname,
                        'type' => 'bcc'
                        );
    }
    else {
      //watchdog('nycc_email', 'nycc_email_get_group_member_emails - skipping ' . $records['mail'] . ' because it was in the recipient list', array(), WATCHDOG_NOTICE) ;
    }
  }
  return $emails;
}






