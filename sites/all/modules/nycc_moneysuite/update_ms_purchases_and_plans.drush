<?php
/* TODO:
 * ms_membership_update_dependencies
 *
 */
 $debug = true;
 
 
  // Set the default for all of the product plans for allow_roles and deny_roles and machine_name
  $result = db_query("SELECT * FROM {ms_products_plans}");
  foreach ($result as $plan) {
    $plan->allow_roles = array();
    $plan->deny_roles = array();
    db_update('ms_products_plans')
      ->fields(array(
        'allow_roles' => serialize($plan->allow_roles),
        'deny_roles' => serialize($plan->deny_roles),
      ))
      ->condition('pid', $plan->pid)
      ->execute();
  }
  drush_print( t('Successfully added the new fields to the ms_products_plans database table.'));


/**
 * Make sure the arrays are serialized correctly.
 */
	drush_print("running ms_products update 7302");
  $result = db_query("SELECT * FROM {ms_products_plans}");
  foreach ($result as $plan) {
    $plan->allow_roles = _ms_products_unserialize($plan->allow_roles);
    $plan->deny_roles = _ms_products_unserialize($plan->deny_roles);
    $plan->modify_options = _ms_products_unserialize($plan->modify_options);
    $plan->recurring_schedule = _ms_products_unserialize($plan->recurring_schedule);
    $plan->data = _ms_products_unserialize($plan->data);
    db_update('ms_products_plans')
      ->fields(array(
        'allow_roles' => serialize($plan->allow_roles),
        'deny_roles' => serialize($plan->deny_roles),
        'modify_options' => serialize($plan->modify_options),
        'recurring_schedule' => serialize($plan->recurring_schedule),
        'data' => serialize($plan->data),
      ))
      ->condition('pid', $plan->pid)
      ->execute();
  }


/**
 * Make sure sku is set and used for the purchases and add fixed date support.
 */
drush_print("running ms_products update 7304");



  // Set the sku of the purchases table to the sku of the product plans table.
  $result = db_query("SELECT * FROM {ms_products_plans}");
  foreach ($result as $plan) {
    db_update('ms_products_purchases')
      ->fields(array(
        'sku' => $plan->sku,
        'bundle' => $plan->bundle,
      ))
      ->condition('sku', $plan->pid)
      ->execute();
  }

  $skus = array();
  module_load_include('inc', 'ms_products', 'ms_products.plans');
  foreach (ms_products_get_plans() as $plan) {
    $skus[$plan->pid] = $plan->sku;
    ms_core_product_id_change($plan->bundle . '-' . $plan->pid, $plan->bundle . '-' . $plan->sku);
    if (module_exists('i18n_string')) {
      module_load_install('i18n_string');
      i18n_string_install_update_context('ms_products_plan:plan:' . $plan->pid . ':*', 'ms_products_plan:plan:' . $plan->sku . ':*');
    }
  }

  // Clear the schema cache.
  cache_clear_all('schema', 'cache');

  drush_print( t('Successfully changed the sku of purchases to point to sku.'));


/**
 * Migrate the modify options field.
 */
drush_print("running ms_products update 7305");
  $result = db_query("SELECT * FROM {ms_products_plans}");
  foreach ($result as $plan) {
    $modify_options = _ms_products_unserialize($plan->modify_options);
    $plan->modify_options = array(
      'upgrade' => $modify_options,
      'downgrade' => array(),
    );
    db_update('ms_products_plans')
      ->fields(array(
        'modify_options' => serialize($plan->modify_options),
      ))
      ->condition('pid', $plan->pid)
      ->execute();
  }

  drush_print( t('Successfully updated the modify options field.'));




/**
 * Add new pid field for Purchases.
 */
  // Populate the existing purchases.
  $result = db_query("SELECT * FROM {ms_products_purchases}");
  foreach ($result as $purchase) {
    $plan = ms_products_plan_load($purchase->sku);
    if ($plan) {
      db_update('ms_products_purchases')
        ->fields(array(
          'pid' => $plan->pid,
        ))
        ->condition('id', $purchase->id)
        ->execute();
    }
  }

  drush_print( t('Successfully added pid field for purchases.'));

?>

  