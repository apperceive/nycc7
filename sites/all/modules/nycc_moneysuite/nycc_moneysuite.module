<?php

function nycc_moneysuite_menu() {
  $items = array();
  $items['admin/config/nycc/nycc_moneysuite'] = array(
      'title' => 'NYCC MoneySuite Settings',
      'description' => 'configure MoneySuite integration',
      'page callback' => 'drupal_get_form',
      'file' => 'nycc_moneysuite.admin.inc',
      'access arguments' => array('administer nycc_moneysuite'),
      'type' => MENU_NORMAL_ITEM,
      'access callback' => TRUE,
      'page arguments' => array('nycc_moneysuite_admin'),
    );
  return $items;
}

function nycc_moneysuite_permission() {
  return array(
    'administer nycc_moneysuite' => array(
      'title' => t('administer nycc moneysuite'),
      'description' => t('administer nycc moneysuite'),
        ), 
    );
}

// Block on Volunteer Page (Show status of past submissions, enabled/disable based time window)
function nycc_moneysuite_block_info() {
  //VALIDATED
  $blocks[0]['info'] = t('NYCC Membership Info');
  $blocks[0]['cache'] = DRUPAL_NO_CACHE;
  $blocks[1]['info'] = t('NYCC Membership Summary');
  $blocks[1]['cache'] = DRUPAL_NO_CACHE;  
  return $blocks;
} // nycc_moneyscript_block


function nycc_moneysuite_block_view($delta = 0) {
  switch ($delta ) {
    case 0:
      global $user;
      if (!user_is_anonymous() ) {
        $membership_details = nycc_moneysuite_get_membership_message($user);
        $fullname = nycc_get_user_full_name($user);
        $block['subject'] = "Membership Summary for $fullname";
        $block['content'] = $membership_details['msg'] . "<br/>"  . $membership_details['link'];
      }
      break;
    
    case 1:
      $paid_plans =  nycc_moneysuite_get_paid_plans();
      $to_print='';
      $total_members = 0;
      foreach($paid_plans as $this_plan) {
        $this_plan_count = nycc_moneysuite_get_member_count($this_plan->sku);
        $total_members += $this_plan_count;
        $to_print .= t('<b>@name:</b> @count<br/>', array('@name' => $this_plan->name, '@count' => $this_plan_count ));
      }
      $to_print .= t('<b>Total Members:</b> @total', array('@total' => $total_members));
      $block['subject'] = "Membership Summary";
      $block['content'] = $to_print;
  } 
  return $block;
} // nycc_moneysuite_block_view


function nycc_moneysuite_get_member_count($skus = array()) {
  $return_count = 0;
  if (!is_array($skus)) {
    $skus = array($skus);
  }
  foreach($skus as $this_sku) {
    $return_count += ms_products_get_purchases_count($this_sku, $statuses = array('active', 'completed', 'expiring'));
  }
  return $return_count;
}

function nycc_moneysuite_get_paid_plans () {
  $return_plans = array();
  $paid_plan_skus =  array_filter(array_values(variable_get('nycc_moneysuite_membership_plans')));
  if(isset($paid_plan_skus)) {
    foreach($paid_plan_skus as $this_sku) {
      $return_plans[$this_sku] = ms_products_plan_load( $this_sku);   
    }        
  }
  return $return_plans;
}

function nycc_moneysuite_get_memberships($user = null) {
  $user = nycc_get_user_object($user);
  
  $paid_plans = nycc_moneysuite_get_paid_plans();
  
  $purchased_plans = ms_products_get_user_purchases($user->uid, 'ms_membership');
  $to_be_returned = array();
  
  if((!empty($purchased_plans)) && (!empty($paid_plans))) {
    foreach($purchased_plans as $membership) {
      if(array_key_exists($membership->sku, $paid_plans)) {
        $to_be_returned[$membership->id]  = $membership;
      }
    }
  }
  return $to_be_returned;
}

function nycc_moneysuite_get_membership_message($user = null) {
  $user = nycc_get_user_object($user);
  $uid = $user->uid;
  $membership = nycc_moneysuite_get_most_current_membership($user);
  switch ($membership->status) {
    case 'active' :
      $msg = t("Your membership is set to auto-renew on @date.",
               array('@date' => $membership->next_payment_date));
      $link = l('View your membership details',"/user/$uid/ms_membership",array());      
            
      break;
    case 'completed':
      $msg = t("Your membership is valid until @date.",
               array('@date' => date("F j, Y", $membership->expiration)));
      $link = l('extend your membership', ms_products_get_renewal_link($membership->sku, $membership->id),array()); 
    
      break;
    case 'expiring':
      $msg = t("Your membership is expiring soon!! Please renew before @date.",
               array('@date' =>date("F j, Y", $membership->expiration)));
      $link = l('extend your membership', ms_products_get_renewal_link($membership->sku, $membership->id),array());       
      
      
      break;
    case 'expired':
      $msg = t("Your membership has expired! Please renew ASAP.");
      $link = l('extend your membership', ms_products_get_renewal_link($membership->sku, $membership->id),array());
      break;    
    
  }
  return(array('msg' => $msg, 'link' => $link));
}

function nycc_moneysuite_get_most_current_membership($user = null) {
  /*Possible Scenarios:
   *  Non-Member - No Membership Plan - Return Purchase Link - complete
   *  Recurring Subscription Member with one membership- Return Nothing - complete
   *  One-time Payment Member with one membership - Return Renew link - complete
   *  One-time Expiring Soon Member with one membership -  Return Renew link - Complete
   *  Expired Member - Only expired Plans. Return renewal of most recent one
   *  Multiple Membership - One not expired - Return Renew link
   *  Multiple Membership - Multiple not expired - Return link to Membership Tab
   */
  $user = nycc_get_user_object($user);
  $uid = $user->uid;
  $memberships = nycc_moneysuite_get_memberships($user);
  

  $most_recent_active_id = null;
  $most_recent_expired_id = null;
  
	
  foreach($memberships as $m_id => $this_membership) {
    //iterate thru each row. if an active auto-renew is found then just return that. else load the membership into the array for further analysis
    switch ($this_membership->status) {
      case 'active':
        //if this is an active auto-renew membership
        return nycc_moneysuite_get_next_payment($this_membership);
        break;
      
      case 'expiring' :
      case 'completed' :
        if(isset($most_recent_active_id) ) {
          if($this_membership->expiration  > $memberships[$most_recent_active_id]->expiration)  {
            //set this current membership id to be the most recent active membership
            $most_recent_active_id = $m_id;
          }
        } else { //if no other active memberships have been found yet
          //set this current membership id to be the most recent active membership
          $most_recent_active_id = $m_id;
        }        
        break;
      default:
        if(isset($most_recent_expired_id) ) {
          if($this_membership->expiration  > $memberships[$most_recent_expired_id]->expiration)  {
            //set this current membership id to be the most recent active membership
            $most_recent_expired_id = $m_id;
          }
        } else { //if no other active memberships have been found yet
          //set this current membership id to be the most recent active membership
          $most_recent_expired_id = $m_id;
        }        
        break;
    }
  }
  if(isset($most_recent_active_id)) {
    return nycc_moneysuite_get_next_payment($memberships[$most_recent_active_id]);
  }
  elseif(isset($most_recent_expired_id)) {
    return nycc_moneysuite_get_next_payment($memberships[$most_recent_expired_id]);
  }
}

function nycc_moneysuite_get_next_payment($membership) {
  $rs = ms_core_get_recurring_schedule($membership->oid);
  if(isset($rs)) {
    $membership->next_payment_amount = ms_core_get_next_payment_amount($rs);
    $membership->next_payment_date = ms_core_get_next_payment_date($rs);    
  }
  return $membership;
}


//
//
//
//
//
//
//
//function nycc_moneysuite_get_most_current_membership($user = null) {
//  /*Possible Scenarios:
//   *  Non-Member - No Membership Plan - Return Purchase Link - complete
//   *  Recurring Subscription Member with one membership- Return Nothing - complete
//   *  One-time Payment Member with one membership - Return Renew link - complete
//   *  One-time Expiring Soon Member with one membership -  Return Renew link - Complete
//   *  Expired Member - Only expired Plans. Return renewal of most recent one
//   *  Multiple Membership - One not expired - Return Renew link
//   *  Multiple Membership - Multiple not expired - Return link to Membership Tab
//   */
//  $user = nycc_get_user_object($user);
//  $uid = $user->uid;
//  $plans = variable_get('nycc_moneysuite_membership_plans');
//  $paid_plans = "'" . implode("','", array_filter(array_values(variable_get('nycc_moneysuite_membership_plans')))) . "'" ;
//
//  
//  $sql=<<<EOS
//select
//ms.uid as uid,
//ms.id as purchase_id,
//mp.name as plan_name,
//ms.oid as order_id,
//ms.status as status,
//ms.expiration as expiration,
//ms.start_date as start_date,
//rs.next_payment as next_payment,
//ms.sku as sku
//from {ms_products_purchases} ms
//join {ms_products_plans} mp on mp.sku=ms.sku
//LEFT join {ms_recurring_schedules} rs on rs.oid=ms.oid
//WHERE ms.uid=$uid
//AND ms.sku in ($paid_plans)
//EOS;
//
//  $results =array();
//  $most_recent_active_id = null;
//  $most_recent_expired_id = null;
//  
//	$q = db_query($sql);
//  foreach($q as $row) {
//    //iterate thru each row. if an active auto-renew is found then just return that. else load the membership into the array for further analysis
//    if(in_array($row->sku, variable_get('nycc_moneysuite_membership_plans'))) {
//      if($row->status == 'active'){
//        //if this is an active auto-renew membership
//        return $row;
//      }
//      $results[$row->purchase_id] = $row;
//    }
//  }
//  foreach($results   as $membership_id => $membership ) {
//    if($membership->status == 'completed' || $membership->status == 'expiring' ) {
//      //if this is an active membership then see if any other active memberships expire later
//      if(isset($most_recent_active_id) ) {
//        if($membership->expiration  > $results[$most_recent_active_id]->expiration)  {
//          //set this current membership id to be the most recent active membership
//          $most_recent_active_id = $membership_id;
//        }
//      } else { //if no other active memberships have been found yet
//        //set this current membership id to be the most recent active membership
//        $most_recent_active_id = $membership_id;
//      }
//    }
//    else { //if the membership status is not completed or expiring"
//      if(isset($most_recent_expired_id) ) {
//        if($membership->expiration  > $results[$most_recent_expired_id]->expiration)  {
//          //set this current membership id to be the most recent expired membership
//          $most_recent_expired_id = $membership_id;
//        }
//      } else { //if no other active memberships have been found yet
//        //set this current membership id to be the most recent expired membership
//        $most_recent_expired_id = $membership_id;
//      }
//    }
//  }
//
//  if(isset($most_recent_active_id)) {
//    return $results[$most_recent_active_id];
//  }
//  elseif(isset($most_recent_expired_id)) {
//    return $results[$most_recent_expired_id];
//  }
//  
//  
//  
    
  //
  //
  //$memberships = nycc_moneysuite_get_membership($user);
  //if (empty ($memberships)) {
  //  $paid_plans = variable_get('nycc_moneysuite_membership_plans');
  //  reset($paid_plans);
  //
  //  return array(ms_products_get_purchase_url(key($paid_plans), true), "Purchase NYCC Membership");
  //
  //} else if (count($memberships ==1)) {
  //  //if only one membership then check if recurring or not
  //  if($memberships[0]->status != 'Active - Recurring') {
  //    return array(
  //                 ms_products_get_renewal_link($memberships[0]->sku, $memberships[0]->id),
  //                 "Renew Your NYCC Membership"
  //                 );
  //  }
  //} else {
  //  //if there are multiple memberships purchased (there should not be!) then
  //  foreach($memberships as $this_membership)
  //  {
  //    if( ($this_membership->expiration > REQUEST_TIME)  &&
  //      in_array($this_membership->status, array('Active - Payment Completed', 'Active - Recurring', 'Cancelled' )))
  //    {
  //      return ms_products_get_renewal_link($this_membership->sku, $this_membership->id);
  //    }
  //  }
  //} 



